<?xml version="1.0" encoding="UTF-8"?>
<?oxygen RNGSchema="https://raw.githubusercontent.com/bleierr/Letters-1916-sample-files/master/plain%20corresp%20templates/template.rng" type="xml"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
<teiHeader xml:id="L1916_{{Letter}}">
    <fileDesc>
            <titleStmt>
                <title>{{Title|e}}</title>
                {% if Creator %}
                <author>{{Creator|e}}</author>
                {% else %}
                <author>MISSING</author>
                {% endif %}
            </titleStmt>
            <editionStmt>
                <edition>
                    The Letters 1916
                </edition>
                <respStmt>
                    <resp>General Editor</resp>
                    <name xml:id="SS">Susan Schreibman</name>
                </respStmt>
                
                {% for editor in Editors %}
                <respStmt>
                        <resp>Editor</resp>
                        <name xml:id="{{editor}}">{{ editor }}</name>    
                </respStmt>
                {% endfor %}

                {% for contributor in Contributor_List %}
                <respStmt>
                    <resp>
                        Contributor
                    </resp>
                    <name xml:id="{{contributor}}">{{ contributor }}</name>
                </respStmt>
                {% endfor %}


            </editionStmt>
            <publicationStmt>
                <publisher>
                    <address>
                        <name>An Foras Feasa</name>
                        <orgName>Maynooth University</orgName>
                        <region>Co. Kildare</region>
                        <placeName>
                            <settlement>Maynooth</settlement>
                            <country>IRE</country>
                        </placeName>
                    </address>
                </publisher>
                <idno>L1916_{{Letter|e}}</idno>
                <availability status="restricted">
                    
                    <p>All rights reserved. No part of this image may be reproduced, distributed, or
        transmitted in any form or by any means, including photocopying, recording, or other
        electronic or mechanical methods, without the prior written permission of the institutional
        or private owner of the image and the Letters of 1916 project. For permission requests,
        write to the Letters of 1916 at letters1916@gmail.com. </p>
                    <!-- <p>Copyright  2015, Letters of 1916, Maynooth</p> -->
                </availability>
                <date when="2015">2015</date>
            </publicationStmt>
            <!--<seriesStmt>
                 Series statement is for book series
                <p>PUT A STATEMENT</p>
            </seriesStmt>-->
            <notesStmt>
                <note type="summary">
                    {% if Description %}
                        {% for desc_para in Description.split('\n\n') %}
                            <p>{{desc_para|e}}</p>
                        {% endfor %}
                    {% endif %}
                </note>
            </notesStmt>
            <sourceDesc>
                <msDesc>
                    <msIdentifier>
                        {% if 'Private' in Source %}
                        <repository ref="#{{Source|e}}"></repository>
                        <collection type='private'>{{Source|e}}</collection>
                        {% else %}
                        <repository ref="#{{Source|e}}">{{Source|e}}</repository>
                        <!-- {% if Document_Collection_Number %}
                                Original DCN: {{Document_Collection_Number|e}}
                             {% endif %}
                        -->
                            {% if Document_Collection %}
                                <collection type='public'>{{Document_Collection|e}}</collection>
                            {% endif %}
                            {% if Document_Number|e %}
                        <idno>{{Document_Number|e}}</idno>
                            {% else %}
                        <idno>MISSING</idno>

                           {% endif %}
                       {% endif %}
                    </msIdentifier>
                </msDesc>
           </sourceDesc>
        </fileDesc>
    <profileDesc>
            <correspDesc>

                <correspAction type="received">
                {% if Recipient %}
                    <persName ref="#{{to_snake(Recipient)|e}}">{{Recipient|e}}</persName>
                {% else %}
                    <persName>MISSING</persName>
                {% endif %}
                
                {% if Recipient_s_location %}
                    <placeName  ref="#{{to_snake(Recipient_s_location)|e}}">{{Recipient_s_location|e}}</placeName>
                {% endif %}
                </correspAction>
                 
                <correspAction type="sent">
                    {% if Creator %} 
                    <persName ref="#{{to_snake(Creator)|e}}">{{Creator|e}}</persName>
                    {% else %}
                    <persName ref="MISSING">{{Creator|e}}</persName>
                    {% endif %}
                    {% if Sender_s_location %} 
                    <placeName ref="#{{to_snake(Sender_s_location)|e}}">{{Sender_s_location|e}}</placeName>
                    {% endif %}
                    {% if DATE_created %}
                    <date when="{{DATE_created}}">{{DATE_created_as_words}}</date>
                    {% endif %}
                </correspAction>
            </correspDesc>
            <textClass>

                <keywords>
                    <list>
                    {% if Authors_gender %}
                        <item n="gender">{{Authors_gender|e}}</item>
                    {% endif %}  
                    {% if Year_of_death_of_author %}
                        <item n="death">{{Year_of_death_of_author|e}}</item>
                        {% endif %}
                    {% if Collection %}    
                        <item n="tag">{{Collection|e}}</item>
                    {% endif %}
                    {% if Topics %}
                        {% for topic in Topics.split(',') %}
                            {% if topic.lower() != Collection.lower() %}
                            <item n="tag">{{topic|e}}</item>
                            {% endif %}
                        {% endfor %}
                    {% endif %}       
                    </list>
                </keywords>
            </textClass>
            <langUsage>
                <language ident="en">{{Language|e}}</language>
            </langUsage>
     </profileDesc>
    <encodingDesc>
        <editorialDecl>
            <p>
                <!-- Write this -->
            </p>
        </editorialDecl>
        <projectDesc>
            <p><!-- Was done by crowdsourcing, Python, magic, etc. --></p>
        </projectDesc>
        <classDecl>
            <taxonomy>
                <listBibl>
                    <bibl>Tags taken from Library of Congress!!! <!-- sort this out --></bibl>
                </listBibl>
            </taxonomy>
        </classDecl>
        <appInfo>
            <application xml:id="PythonScript" ident="LetterProcessing" version="2">
               <desc>Letter processing pipeline built by Richard Hadden &amp; Linda Spinazze,
                  Maynooth University, 2015.
                  <ref target="https://github.com/oculardexterity/Letters-Processing"/>
               </desc>
            </application>
            <application xml:id="LetEd" ident="LetEd" version="1">
               <desc>
                  LetEd. letter editing tool built by Richard Hadden, Maynooth University, 2015.
                  Built using the Python <ref target="http://flask.pocoo.org/">Flask Framework</ref>
                  and the <ref target="https://github.com/umd-mith/angles">Angles web-based XML editor</ref>.
               </desc>
            </application>
         </appInfo>
        <tagsDecl>
            <rendition>
                <!-- Some stuff... -->
            </rendition>
        </tagsDecl>
    </encodingDesc>
    <revisionDesc>
        {% for revision in Edits %}
            <change when="{{revision.datetime}}" who="#{{revision.editor}}">
                {% if revision.editType == 'Clean Tags' %}
                    Clean tags: Page {{ revision.page_cleaned }} cleaned of {{ revision.clean_count }} tag errors.
                {% elif revision.editType == 'Revision in Omeka' %}
                    Page {{ revision.Omeka_RevisionPageNo }} modified:
                    {{ revision.Omeka_Translation }}
                {% elif revision.editType == 'Old page duplicate removed' %}
                    Old revision of page {{ revision.Duplicate_pageNo }} removed (version from <date when="{{revision.Duplicate_pageTimestamp}}"/>)
                {% elif revision.editType == 'New page instance created' %}
                    New instance of page {{revision.New_pageNo}} created using version from <date when="{{revision.New_pageTimestamp}}"/>
                {% elif revision.editType == 'Additional page added to letter' %}
                    Page {{revision.Merged_pageNo}} added to letter (version from <date when="{{revision.Merged_pageTimestamp}}"/>)
                {% elif revision.editType == 'New letter objected created' %}
                    New letter created with initial page {{ revision.Initial_pageNo }} (version from <date when="{{revision.Initial_pageTimestamp}}"/>)
                {% else %}
                     {{revision.editType}}
                {% endif %}
            </change>
        {% endfor %}
    </revisionDesc>
</teiHeader>
    
<facsimile> 
    {% for key, page in sorted(Pages.items()) %}
    <graphic xml:id="L1916_{{Letter}}_img_{{key}}" url="{{page.Archive_Filename}}"/> 
    {% endfor %}
</facsimile>               

<text>
    <group>
       
    {% if Type == 'PostcardAM' or Type == 'PostcardIM' %} 
        <!-- Type is postcard -->
        {% for key, page in [sorted(Pages.items())[0]] %} 
        <pb n="{{ key }}" facs="#L1916_{{Letter}}_img_{{key}}"/>
            
        <text type="{{Type[:-2].lower()}}">
            <body>
                {% if page.PageType == 'AddressSide'  %}
                <div type="address">
                    {{page.Translation}}
                </div>
                {% elif page.PageType == 'TextSide' %}
                <div type="message">
                    {{page.Translation}}
                </div>
                {% elif page.PageType == 'ImageCaptionSide'  %}
                <div type="imageCaption">
                    {{page.Translation}}
                </div>
                {% endif %}
    {% endfor %}
        {% for key, page in sorted(Pages.items())[1:] %}
             <pb n="{{ key }}" facs="#L1916_{{Letter}}_img_{{key}}"/>
                    {% if page.PageType == 'AddressSide'  %}
                    <div type="address">
                        {{page.Translation}}
                    </div>
                    {% elif page.PageType == 'TextSide' %}
                    <div type="message">
                        {{page.Translation}}
                    </div>
                    {% elif page.PageType == 'ImageCaptionSide'  %}
                    <div type="imageCaption">
                        {{page.Translation}}
                    </div>
                    {% endif %}
        {% endfor %}
            </body>
        <text>

    {% for key, page in sorted(Pages.items()) %}
        {% if page.PageType != 'AddressSide' and page.PageType != 'TextSide' and page.PageType != 'ImageCaptionSide' and page.PageType != 'ImageSide' %}
        <text type="additional">
            <body>
                {{page.Translation}}
            </body>
        </text>
        {% endif %}
    {% endfor %}



    {% elif Type == "Letter" %}
    <!-- type is letter -->

    {% for key, page in [sorted(Pages.items())[0]] %}
        {% if page.PageType != 'EnvelopeType' %}
        <pb n="{{ key }}" facs="#L1916_{{Letter}}_img_{{key}}"/>
            <text type="letter">
                <body>
                    {{page.Translation}}
        {% endif %}
    {% endfor %}

    {% for key, page in sorted(Pages.items())[1:] %}
        {% if page.PageType != 'EnvelopeType' %} 
        <pb n="{{ key }}" facs="#L1916_{{Letter}}_img_{{key}}"/>
        {% endif %}
        {% if sorted(Pages.items())[0][1].PageType == 'EnvelopeType'  %}
            <text type="letter">
                <body>
        {% endif %}
        {% if page.PageType != 'EnvelopeType' %}   
            {{page.Translation}}
        {% endif %}
    {% endfor %}
                </body>
            </text>

        {% for key, page in sorted(Pages.items()) %}
            {% if page.PageType == 'EnvelopeType' %}
            <pb n="{{ key }}" facs="#L1916_{{Letter}}_img_{{key}}"/>
            <text type="envelope">
                <body> 
                    <ab>
                        {{page.Translation}}
                    </ab>
                </body>
            </text>
            {% endif %}
        {% endfor %}
    

    {% endif %}     

    </group>
</text>
     

</TEI>


    